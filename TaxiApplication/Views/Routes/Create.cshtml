@model TaxiApplication.Data.Route

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Admin.cshtml";

}

<h2>Create</h2>

@using (Html.BeginForm(actionName: "Create", controllerName: "Routes", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal modal-content" style="margin-top:2%;width:45%;padding-left:30px;padding-right:30px;margin-bottom:50px">
        <h4>Add Route</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.RouteId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RouteId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RouteId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <h3> Route Name </h3>          <div class="col-md-10">
                @Html.EditorFor(model => model.RouteName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RouteName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <tr>
                    <th>@Html.LabelFor(model => model.picture)</th>
                    <td>
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-file-picture-o"></i>
                            </div>
                            <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control" required="required" />
                        </div>
                    </td>
                </tr>
                @Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <h3>Stop Over </h3>          <div class="col-md-10">
                @Html.EditorFor(model => model.StopOver, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StopOver, "", new { @class = "text-danger" })
            </div>
        </div>

        <label>Select Rank</label>
        @Html.DropDownList("RankId", null, htmlAttributes: new { @class = "w3-border w3-padding", style = "width:100%" })
        @Html.ValidationMessageFor(model => model.RankId, "", new { @class = "text-danger" })

        <label>Select Rank Manager</label>
        @Html.DropDownList("rankmanagerID", null, htmlAttributes: new { @class = "w3-border w3-padding", style = "width:100%" })
        @Html.ValidationMessageFor(model => model.rankmanagerID, "", new { @class = "text-danger" })

        <span class="w3-left">
            <a class="w3-button" type="submit" style="margin-top:5px;background-color:#f0ad4e;color:white" href="~/Routes/Index"> Back </a>
        </span>

        <span class="w3-right">
            <button class="w3-button" type="submit" style="margin-top:5px;background-color:#f0ad4e;color:white"> Save </button>
        </span>
    </div>

}
<div class="col-md-6">
    <div class="col-md-6">
        <img id="image_preview" src="#" alt="" />
    </div>

    <script type="text/javascript">
        //image preview
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image_preview')
                        .attr('src', e.target.result)
                        .width(400)
                        .height(400);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyDdl92Jhloy3TczguBxXwqD5AH3m2oCNY0" type="text/javascript"></script>


    <script type="text/javascript">

        google.maps.event.addDomListener(window, 'load', function () {
            var options = {
                types: ['(cities)'],
                componentRestrictions: { country: "ZA" }
            };

            var input = document.getElementById('RouteName');

            var places = new google.maps.places.Autocomplete(input, options);


        });
    </script>
    <script type="text/javascript">

        google.maps.event.addDomListener(window, 'load', function () {
            var options = {
                types: ['(cities)'],
                componentRestrictions: { country: "ZA" }
            };

            var input = document.getElementById('StopOver');

            var places = new google.maps.places.Autocomplete(input, options);


        });
    </script>

}

